scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda), parse = T) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda),'=4') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda),'=4') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
## ---- PoissonPlot
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
source('~/Dropbox/Teaching/ProbStatUProg/Lectures/Lecture3SlideCode.R')
library(ggplot2)
source('~/Dropbox/Teaching/ProbStatUProg/Lectures/Lecture3SlideCode.R')
library(ggplot2)
source('~/Dropbox/Teaching/ProbStatUProg/Lectures/MVutils.R')
library(ggplot2)
source('~/Dropbox/Teaching/ProbStatUProg/Lectures/MVutils.R')
source('~/.active-rstudio-document')
## ---- PoissonPlot
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(r'This is a nice title $x^2 = y + 2\sin(\pi)$') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
## ---- PoissonPlot
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(r'This is a nice title $x^2 = y + 2\sin(\pi)$') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
## ---- PoissonPlot
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(r'This is a nice title $x^2 = y + 2\sin(\pi)$') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
## ---- PoissonPlot
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(r'This is a nice') +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
data(tips);
p0 = qplot(sex, data = tips, geom = 'bar');
p1 = p0 + scale_x_discrete(labels = c('Female' = expression(alpha),
'Male'   = expression(beta)));
print(p1);
tips
library(ggplot2)
tips
paste( "RR(overall) =", RR, "N =", N, "alpha =", alpha1 )
paste("dsdsa","asas",a)
a = 3
paste("dsdsa","asas",a)
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(beta)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(paste(expression(lambda)," = ",2)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(paste(expression(lambda)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda = 2)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda == 2)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle("p = 0.2") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
## ---- PoissonPlot
n <- 20
data <- data.frame(pmf = dpois(seq(0,n), lambda = 0.5), x = as.factor(seq(0,n)))
p1 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda == 0.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 1), x = as.factor(seq(0,n)))
p2 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda == 0.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 5), x = as.factor(seq(0,n)))
p3 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda == 0.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
data <- data.frame(pmf = dpois(seq(0,n), lambda = 10), x = as.factor(seq(0,n)))
p4 <- ggplot(data, aes(x,pmf)) + geom_bar(width=.2, stat="identity") + ggtitle(expression(lambda == 0.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.title.y = element_blank()) +
scale_x_discrete(breaks=seq(0,n,2))
multiplot(p1, p2, p3, p4, cols=2)
data(cars)
cars
head(cars)
?data
library(MASS)
data()
BJsales
head(BJsales)
head(mtcasrs)
head(mtcars)
head(mtcars)
mtcars[1:20,]
library(manipulate) # Manipulate requires RStudio.
####################################################################
## Bernoulli pmf
BernPlot <- function(p){
xGrid <- c(0, 1)
pmf = c(p,1-p)
barplot(pmf, names.arg=c("0", "1"), main = 'Bernoulli(p) density')
}
manipulate(
BernPlot(p),
p = slider(0, 1, step=0.05, initial = 0.5, label = "The hyperparameter p in Bernoulli(p) distribution")
)
BernPlot <- function(p){
xGrid <- c(0, 1)
pmf = c(p,1-p)
barplot(pmf, names.arg=c("0", "1"), main = 'Bernoulli(p) density')
}
manipulate(
BernPlot(p),
p = slider(0, 1, step=0.05, initial = 0.5, label = "The hyperparameter p in Bernoulli(p) distribution")
)
####################################################################
## Binomial pmf
####################################################################
BinomialPlot <- function(n,p){
xGrid <- seq(0, n)
pmf = choose(n,xGrid)*p^xGrid*(1-p)^(n-xGrid)
barplot(pmf, names.arg=xGrid, main = 'Binomial(n,p) distribution')
}
manipulate(
BinomialPlot(n,p),
n = slider(0, 100, step=1, initial = 10, label = "The hyperparameter n in Binomial(n,p)  distribution"),
p = slider(0, 1, step=0.05, initial = 0.5, label = "The hyperparameter p in Binomial(n,p)  distribution")
)
BernPlot <- function(p){
xGrid <- c(0, 1)
pmf = c(1-p,p)
barplot(pmf, names.arg=c("0", "1"), main = 'Bernoulli(p) density')
}
manipulate(
BernPlot(p),
p = slider(0, 1, step=0.05, initial = 0.5, label = "The hyperparameter p in Bernoulli(p) distribution")
)
# BEGIN USER INPUT
nTrain <- 1000 # Number of training instances
# END USER INPUT
setwd('~/Dropbox/Teaching/ProbStatUProg/')  # Set working directory
load('Data/mnist/mnist')                    # Load mnist data (http://yann.lecun.com/exdb/mnist/).
# Contains the two lists train and test.
# train$x[3,] contains the 28*28=784 grayscale (0-255)
# pixels for the third data point in the training data
# train$y[3] tell us that this is four (4).
train$x <- train$x/255      # Just standardizing to [0,1] for numerical stability
test$x <- test$x/255        # Just standardizing to [0,1] for numerical stability
# Plotting the first 6 training data examples, just to see what we are dealing with.
par(mfrow=c(2,3))
image(matrix(train$x[1,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[2,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[3,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[4,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[5,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[6,], nrow = 28)[,28:1], col=gray(12:1/12))
library(glmnet)              # loading the glmnet package/module in memory
# Fit a multinomial regression with elastic net shrinkage.
fit = glmnet(x = train$x[1:nTrain,], y = train$y[1:nTrain], family = "multinomial",
type.multinomial = "grouped", standardize = FALSE, lambda = exp(-6))
# Plotting the first 6 test examples
par(mfrow=c(2,3))
image(matrix(test$x[1,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[2,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[3,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[4,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[5,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[6,], nrow = 28)[,28:1], col=gray(12:1/12))
# Predicting the digit class of the first six images in the test data.
predict(fit, newx = test$x[1:6,], s = exp(-6), type = "class")
fit
predClassProbs <- predict(fit, newx = test$x[1:6,], s = exp(-6), type = "response")
predClassProbs[1:6,,1]
predClassProbs[1:6,,1]
predClassProbs[1:6,1,1]
predClassProbs[1:6,,1]
dim(predClassProbs)
predClassProbs[1:6,1:10,1]
predClassProbs[2,,1]
predClassProbs[2,,1]
predClassProbs[2,2,1]
predClassProbs[2,1,1]
predClassProbs[2,2,1]
predClassProbs[2,3,1]
predClassProbs[2,8,1]
predict(fit, newx = test$x[1:6,], s = exp(-6), type = "class")
test$y[1:6] # The truth
predClassProbs[2,c(3,7),1]
predClassProbs[2,c(1,3,7),1]
predClassProbs[2,c(1:7),1]
predClassProbs[2,c(1,3,7),1]
predClassProbs[2,c(1,3,7,9),1]
predClassProbs[2,c(1,3,7,8),1]
predClassProbs[2,c(1,3,7,2),1]
predClassProbs[2,c(1,2,3,7,),1]
predClassProbs[2,c(1,2,3,7),1]
predClassProbs[2,c(1,2,3,7),1]
predClassProbs[2,c(1,2,7),1]
predClassProbs[2,c(1,3,7),1]
nTrain <- 3000 # Number of training instances
# END USER INPUT
setwd('~/Dropbox/Teaching/ProbStatUProg/')  # Set working directory
load('Data/mnist/mnist')                    # Load mnist data (http://yann.lecun.com/exdb/mnist/).
# Contains the two lists train and test.
# train$x[3,] contains the 28*28=784 grayscale (0-255)
# pixels for the third data point in the training data
# train$y[3] tell us that this is four (4).
train$x <- train$x/255      # Just standardizing to [0,1] for numerical stability
test$x <- test$x/255        # Just standardizing to [0,1] for numerical stability
# Plotting the first 6 training data examples, just to see what we are dealing with.
par(mfrow=c(2,3))
image(matrix(train$x[1,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[2,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[3,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[4,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[5,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(train$x[6,], nrow = 28)[,28:1], col=gray(12:1/12))
# install.packages('glmnet') # uncomment this line if you haven't installed the glmnet package before.
library(glmnet)              # loading the glmnet package/module in memory
# Fit a multinomial regression with elastic net shrinkage.
fit = glmnet(x = train$x[1:nTrain,], y = train$y[1:nTrain], family = "multinomial",
type.multinomial = "grouped", standardize = FALSE, lambda = exp(-6))
par(mfrow=c(2,3))
image(matrix(test$x[1,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[2,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[3,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[4,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[5,], nrow = 28)[,28:1], col=gray(12:1/12))
image(matrix(test$x[6,], nrow = 28)[,28:1], col=gray(12:1/12))
# Predicting the digit class of the first six images in the test data.
predict(fit, newx = test$x[1:6,], s = exp(-6), type = "class")
test$y[1:6] # The truth
# But we can also compute the probabilities over all digits:
predClassProbs <- predict(fit, newx = test$x[1:6,], s = exp(-6), type = "response")
predClassProbs[1:6,,1]
predClassProbs[2,c(1,2,7),1]
predClassProbs[2,c(1,3,7),1]
